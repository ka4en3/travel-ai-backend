services:
  pg:
    image: postgres:16
    container_name: pg
    restart: always
    env_file:
      - ./app/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-travel_ai_db}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  #  redis:
  #    image: redis:6
  #    container_name: redis
  #    restart: always
  #    ports:
  #      - "6379:6379"
  #    volumes:
  #      - redisdata:/data
  #    healthcheck:
  #      test: ["CMD", "redis-server", "--test-memory", "1"]
  #      interval: 5s
  #      timeout: 5s
  #      retries: 5

  api:
    build:
      context: .
      dockerfile: docker-build/app/Dockerfile
    container_name: api
    restart: always
    env_file:
      - ./app/.env
    environment:
      DB_HOST: pg
    depends_on:
      pg:
        condition: service_healthy
    #      redis:
    #        condition: service_healthy
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./app:/app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
#  redisdata: